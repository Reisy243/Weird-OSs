pkgmaintainer='Isaac David Orozco Delgado (Reisy RedPanda) <opensrcrdp@gmail.com>'
pkgrepo='System'

# toolchain build order: linux-api-headers->glibc->binutils->gcc->glibc->binutils->gcc
# NOTE: valgrind requires rebuilt with each major glibc version

pkgbase='glibc'
pkgname=("$pkgbase"{,-locales} lib32-$pkgbase)
pkgver='2.40'
pkgrel=1
pkgdesc='GNU C Library'
arch=('x86_64')
B32H='i686-pc-linux-gnu'
url='https://www.gnu.org/software/libc'
srcurl="https://raw.githubusercontent.com/Reisy243/Weird-OSs/panwah/$pkgbase"
license=('GPL-2.0-or-later' 'LGPL-2.1-or-later')
makedepends=('gd' 'lib32-gcc-libs' 'python3')
options=('staticlibs' '!lto')
source=(
	"https://ftp.gnu.org/gnu/$pkgbase/$pkgbase-$pkgver.tar.gz"
	"$srcurl/locale.gen.txt"
	"$srcurl/locale-gen"
	"$srcurl/sdt.h"
	"$srcurl/sdt-config.h"
)
validpgpkeys=(
	'7273542B39962DF7B299931416792B4EA25340F8' # Carlos O'Donell
	'BC7C7372637EC10C57D7AA6579C43DFBF1CF2187' # Siddhesh Poyarekar
)
sha256sums=(
	'2abc038f5022949cb67e996c3cae0e7764f99b009f0b9b7fd954dfc6577b599e'	# glibc-2.40.tar.gz
	'f313818b24e9605b7121576f844c40f4fc8ffed4d51e44e26eac10f3d382e78f'	# locale.gen.txt
	'61da596fd8592e13dbf3ca175ae751ec132872b494dfd852f0b8a01229ba0b14'	# locale-gen
	'774061aff612a377714a509918a9e0e0aafce708b87d2d7e06b1bd1f6542fe70'	# sdt.h
	'cdc234959c6fdb43f000d3bb7d1080b0103f4080f5e67bcfe8ae1aaf477812f0'	# sdt-config.h
)

prepare() {
	mkdir -p $pkgbase-build lib32-$pkgbase-build
}

build() {
	local glibccfg=(
		--prefix=/usr
		--with-headers=/usr/include
		--enable-bind-now
		--enable-fortify-source
		--enable-kernel=4.4
		--enable-multi-arch
		--enable-stack-protector=strong
		--enable-systemtap
		--disable-nscd
		--disable-profile
		--disable-werror
		--disable-timezone-tools
	)

	# _FORTIFY_SOURCE=3 causes testsuite build failure and is unnecessary during
	# actual builds (support is built-in via --enable-fortify-source).
	CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=3/}

	cd $pkgbase-build

	echo "slibdir=/usr/lib" >> configparms
	echo "rtlddir=/usr/lib" >> configparms
	echo "sbindir=/usr/bin" >> configparms
	echo "rootsbindir=/usr/bin" >> configparms

	"$srcdir/$pkgbase-$pkgver/configure" \
		--libdir=/usr/lib \
		--libexecdir=/usr/lib \
		--enable-cet \
		"${glibccfg[@]}"

	make

	# build info pages manually for reproducibility
	make info

	cd ../lib32-$pkgbase-build
	export CC="gcc -m32 -mstackrealign"
	export CXX="g++ -m32 -mstackrealign"

	# remove frame pointer flags due to crashes of nvidia driver on steam starts
	# See https://gitlab.archlinux.org/archlinux/packaging/packages/glibc/-/issues/10
	CFLAGS=${CFLAGS/-fno-omit-frame-pointer -mno-omit-leaf-frame-pointer/}

	echo "slibdir=/usr/lib32" >> configparms
	echo "rtlddir=/usr/lib32" >> configparms
	echo "sbindir=/usr/bin" >> configparms
	echo "rootsbindir=/usr/bin" >> configparms

	"$srcdir/$pkgbase-$pkgver/configure" \
		--host=$B32H \
		--libdir=/usr/lib32 \
		--libexecdir=/usr/lib32 \
		"${glibccfg[@]}"

	make

	cd ..

	# pregenerate locales here instead of in package
	# functions because localedef does not like fakeroot
	make -C "$srcdir/$pkgbase-$pkgver/localedata" objdir="$srcdir/$pkgbase-build" DESTDIR="$srcdir/locales" install-locale-files
}

# Credits for _skip_test() and check() @allanmcrae
# https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/glibc/PKGBUILD
_skip_test() {
	test=${1}
	file=${2}
	sed -i "/\b$test /d" "$srcdir/$pkgbase-$pkgver/$file"
}

check() (
	cd $pkgbase-build

	# adjust/remove buildflags that cause false-positive testsuite failures
	sed -i 's/-Werror=format-security/-Wformat-security/' config.make   # failure to build testsuite
	sed -i '/CFLAGS/s/-fno-plt//' config.make                           # 27 failures
	sed -i '/CFLAGS/s/-fexceptions//' config.make                       # 1 failure

	# The following tests fail due to restrictions in the Arch build system
	# The correct fix is to add the following to the systemd-nspawn call:
	# --system-call-filter="@clock @memlock @pkey"
	_skip_test test-errno-linux	sysdeps/unix/sysv/linux/Makefile
	_skip_test tst-mlock2		sysdeps/unix/sysv/linux/Makefile
	_skip_test tst-ntp_gettime	sysdeps/unix/sysv/linux/Makefile
	_skip_test tst-ntp_gettimex	sysdeps/unix/sysv/linux/Makefile
	_skip_test tst-pkey		sysdeps/unix/sysv/linux/Makefile
	_skip_test tst-process_mrelease	sysdeps/unix/sysv/linux/Makefile
	_skip_test tst-shstk-legacy-1g	sysdeps/x86_64/Makefile
	_skip_test tst-adjtime		time/Makefile

	make check
)

package_glibc() {
	depends=('linux-api-headers>=4.10' 'tzdata' 'BaseOS')
	optdepends=(
		'gd: for memusagestat'
		'perl: for mtrace'
	)
	provides=(
		"libc"{,.so,6,.so.6,-dev,6-dev} {,$TARCH-}"$pkgname-dev"
		"ldd"{,-$pkgname} "$THOST-libc"{,6,-dev,6-dev}
		"$THOST-ldd" "$TARCH-ldd-$pkgname"
	)
	conflicts=({,ldd-}"musl")
	install=$pkgname.install
	backup=(
		'etc/gai.conf'
		'etc/locale.gen'
	)

	make -C $pkgname-build DESTDIR="$pkgdir" install
	rm -f "$pkgdir/etc/ld.so.cache"

	cd $pkgname-$pkgver

	install -dm755 "$pkgdir/usr/lib/locale"
	install -m644 posix/gai.conf "$pkgdir/etc/gai.conf"
	install -m755 "$srcdir/locale-gen" "$pkgdir/usr/bin"

	# Create /etc/locale.gen
	install -m644 "$srcdir/locale.gen.txt" "$pkgdir/etc/locale.gen"
	sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' localedata/SUPPORTED >> "$pkgdir/etc/locale.gen"

	# Add SUPPORTED file to pkg
	sed -e '1,3d' -e 's|/| |g' -e 's| \\||g' \
	localedata/SUPPORTED > "$pkgdir/usr/share/i18n/SUPPORTED"

	# install C.UTF-8 so that it is always available
	# should be built into glibc eventually
	# https://sourceware.org/glibc/wiki/Proposals/C.UTF-8
	# https://bugs.archlinux.org/task/74864
	install -dm755 "$pkgdir/usr/lib/locale"
	cp -r "$srcdir/locales/usr/lib/locale/C.utf8" -t "$pkgdir/usr/lib/locale"
	sed -i '/#C\.UTF-8 /d' "$pkgdir"/etc/locale.gen

	# Provide tracing probes to libstdc++ for exceptions, possibly for other
	# libraries too. Useful for gdb's catch command.
	install -Dm644 "$srcdir/sdt.h" "$pkgdir/usr/include/sys/sdt.h"
	install -Dm644 "$srcdir/sdt-config.h" "$pkgdir/usr/include/sys/sdt-config.h"
}

package_lib32-glibc() {
	pkgdesc+=' (32-bit)'
	depends=("$pkgbase=$pkgver")
	provides=("libc"{,6}{,-i686,-i386}{,-multilib}{,-dev} "$pkgname-dev" "$B32H-$pkgbase")
	options+=('!emptydirs')
	install=$pkgname.install

	make DESTDIR="$pkgdir" -C $pkgname-build install
	cd "$pkgdir"
	rm -rf etc sbin usr/{bin,sbin,share} var

	# We need to keep 32 bit specific header files
	find "usr/include" -type f -not -name '*-32.h'

	# Dynamic linker
	install -d usr/lib
	ln -s ../lib32/ld-linux.so.2 usr/lib/

	# Add lib32 paths to the default library search path
	echo "/usr/lib32" | tee -a "$srcdir/lib32-glibc.conf"
	install -Dm644 "$srcdir/lib32-glibc.conf" "etc/ld.so.conf.d/lib32-glibc.conf"

	# Symlink /usr/lib32/locale to /usr/lib/locale
	ln -s ../lib/locale "usr/lib32/locale"

	# Symlink /usr/lib32/ to /lib32/
	ln -s usr/lib32 lib32
}

package_glibc-locales() {
	arch=('any')
	pkgdesc="Pregenerated locales for $pkgdesc"
	depends=("$pkgbase=$pkgver")
	provides=("libc"{,6}"-locales")

	cp -r locales/* -t "$pkgdir"
	rm -r "$pkgdir/usr/lib/locale/C.utf8"

	# deduplicate locale data
	hardlink -c "$pkgdir/usr/lib/locale"
}
