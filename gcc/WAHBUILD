pkgmaintainer='Isaac David Orozco Delgado (Reisy RedPanda) <opensrcrdp@gmail.com>'
pkgrepo='System'

# toolchain build order: linux-api-headers->glibc->binutils->gcc->glibc->binutils->gcc
# NOTE: libtool requires rebuilt with each new gcc version

pkgbase='gcc'
pkgname=("$pkgbase"{,-{libs,ada,d,fortran,go,m2,objc,rust}} "lib"{32-$pkgbase-libs,${pkgbase}jit} "lto-dump")
pkgver='14.2.0'
pkgrel=1
pkgdesc='The GNU Compiler Collection'
arch=('x86_64')
license=('GPL-3.0-with-GCC-exception' 'GFDL-1.3-or-later')
url="https://$pkgbase.gnu.org"
srcurl="https://raw.githubusercontent.com/Reisy243/Weird-OSs/panwah/$pkgbase"
makedepends=(
	"binutils"
	"doxygen"
	"python3"
	"rust"
	"zstd"
	"$pkgbase-"{ada,d}
	"lib"{isl,mpc,32-{glibc,$pkgbase-libs}}
)
checkdepends=(
	'dejagnu'
	'expect'
	'inetutils'
	'python-pytest'
	'tcl'
)
options=('!emptydirs' '!lto')
libdir="usr/lib/$pkgbase/$THOST/$pkgver"
source=(
	"https://ftp.gnu.org/gnu/$pkgbase/$pkgbase-$pkgver/$pkgbase-$pkgver.tar.gz"{,.sig}
	"$srcurl/c"{8,9}9
	"$srcurl/$pkgbase-ada-repro.patch"
)
sha256sums=(
	'7d376d445f93126dc545e2c0086d0f647c3094aae081cdb78f42ce2bc25e7293'	# gcc-14.2.0.tar.gz
	'SKIP'									# gcc-14.2.0.tar.gz.sig
	'8b2f108c8adea53f38a9c6876d72b1a3f1be1d84851848786a71ddb01279510e'	# c89
	'1586d8f0ed0f2394f029b2fa62d6f0e2aec2e5266ae43fe785eea9299c35c644'	# c99
	'1773f5137f08ac1f48f0f7297e324d5d868d55201c03068670ee4602babdef2f'	# gcc-ada-repro.patch
)
validpgpkeys=(
	'F3691687D867B81B51CE07D9BBE43771487328A9'	# bpiotrowski@archlinux.org
	'86CFFCA918CF3AF47147588051E8B148A9999C34'	# foutrelis@archlinux.org
	'13975A70E63C361C73AE69EF6EEB81F8981C74C7'	# richard.guenther@gmail.com
	'D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62'	# Jakub Jelinek <jakub@redhat.com>
)

prepare(){
	cd $pkgbase-$pkgver

	# Do not run fixincludes
	sed -i 's@\./fixinc\.sh@-c true@' $pkgbase/Makefile.in

	# Panwah installs x86_64 libraries /lib
	sed -i '/m64=/s/lib64/lib/' $pkgbase/config/i386/t-linux64

	# Reproducible gcc-ada
	patch -Np0 < "$srcdir/$pkgbase-ada-repro.patch"

	mkdir -p $srcdir/{$pkgbase,lib${pkgbase}jit}-build
}

build(){
	gccflgags=(
		--prefix=/usr
		--libdir=/usr/lib
		--libexecdir=/usr/lib
		--mandir=/usr/share/man
		--infodir=/usr/share/info
		--with-build-config=bootstrap-lto
		--with-linker-hash-style=gnu
		--with-system-zlib
		--enable-__cxa_atexit
		--enable-cet=auto
		--enable-checking=release
		--enable-clocale=gnu
		--enable-default-pie
		--enable-default-ssp
		--enable-gnu-indirect-function
		--enable-gnu-unique-object
		--enable-libstdcxx-backtrace
		--enable-link-serialization=1
		--enable-linker-build-id
		--enable-lto
		--enable-multilib
		--enable-plugin
		--enable-shared
		--enable-threads=posix
		--disable-libssp
		--disable-libstdcxx-pch
		--disable-werror
	)

	cd $pkgbase-build

	CFLAGS=${CFLAGS/-Werror=format-security/}
	CXXFLAGS=${CXXFLAGS/-Werror=format-security/}

	"$srcdir/$pkgbase-$pkgver/configure" \
		--enable-languages=ada,c,c++,d,fortran,go,lto,m2,objc,obj-c++,rust \
		--enable-bootstrap \
		"${gccflgags[@]}"

	make \
		STAGE1_CFLAGS="-O2" \
		BOOT_CFLAGS="$CFLAGS" \
		BOOT_LDFLAGS="$LDFLAGS" \
		LDFLAGS_FOR_TARGET="$LDFLAGS" \
		bootstrap

	# make documentation
	make -C $THOST/libstdc++-v3/doc doc-man-doxygen

	# Build libgccjit separately, to avoid building all compilers with --enable-host-shared
	# which brings a performance penalty
	cd "$srcdir/lib${pkgbase}jit-build"

	"$srcdir/$pkgbase-$pkgver/configure" \
		--enable-languages=jit \
		--disable-bootstrap \
		--enable-host-shared \
		"${gccflags[@]}"

	make \
		STAGE1_CFLAGS="-O2" \
		BOOT_CFLAGS="$CFLAGS" \
		BOOT_LDFLAGS="$LDFLAGS" \
		LDFLAGS_FOR_TARGET="$LDFLAGS" \
		all-gcc

	cp -a $pkgbase/lib${pkgbase}jit.so* ../$pkgbase-build/$pkgbase/
}

check(){
	cd $pkgbase-build

	# disable libphobos test to avoid segfaults
	sed -i '/maybe-check-target-libphobos \\/d' Makefile

	# do not abort on error as some are "expected"
	make -k check || true
	"$srcdir/$pkgbase-$pkgver/contrib/test_summary"
}

package_gcc-libs(){
	pkgdesc='Runtime libraries shipped by GCC'
	depends=('libc.so>=2.27')
	options=('!emptydirs' '!strip')
	provides=("$pkgname-multilib" "lib"{g{o,fortran,phobos},{ub,san,san,san}}.so)
	replaces=("$pkgname-multilib" "libgphobos")

	cd $pkgbase-build
	make -C $THOST/lib$pkgbase DESTDIR="$pkgdir" install-shared
	rm -f "$pkgdir/$libdir/lib${pkgbase}_eh.a"

	for lib in \
		atomic \
		gfortran \
		go \
		gomp \
		itm \
		quadmath \
		sanitizer/{a,l,ub,t}san \
		stdc++-v3/src \
		vtv
	do
		make -C $THOST/lib$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
	done

	make -C $THOST/libobjc DESTDIR="$pkgdir" install-libs
	make -C $THOST/libstdc++-v3/po DESTDIR="$pkgdir" install
	make -C $THOST/libphobos DESTDIR="$pkgdir" install
	rm -rf "$pkgdir/$libdir/include/d/"
	rm -f "$pkgdir/usr/lib/libgphobos.spec"

	for lib in gomp itm quadmath; do
		make -C $THOST/lib$lib DESTDIR="$pkgdir" install-info
	done

	# remove files provided by lib32-gcc-libs
	rm -rf "$pkgdir/usr/lib32/"

	# Install Runtime Library Exception
	install -Dm644 "$srcdir/$pkgbase-$pkgver/COPYING.RUNTIME" "$pkgdir/usr/share/licenses/$pkgname/RUNTIME.LIBRARY.EXCEPTION"
}

package_gcc(){
	pkgdesc+=' - C and C++ frontends'
	depends=("$pkgbase-libs=$pkgver-$pkgrel" "binutils>=2.28" "zstd"  "lib"{mpc,isl.so})
	optdepends=("lib32-$pkgbase-libs: for generating code for 32-bit ABI")
	provides=("$pkgname-multilib" "$pkgname-$TARCH" "$pkgname-$THOST")
	replaces=("$pkgname-multilib")
	options=('!emptydirs' 'staticlibs')
	
	cd $pkgname-build
	make -C $pkgname DESTDIR="$pkgdir" \
		install-driver \
		install-cpp \
		install-gcc-ar \
		c++.install-common \
		install-headers \
		install-plugin \
		install-lto-wrapper

	install -m755 -t "$pkgdir/usr/bin/" $pkgname/gcov{,-tool}
	install -m755 -t "$pkgdir/$libdir/" $pkgname/{cc1,cc1plus,collect2,lto1}

	make -C $THOST/lib$pkgname DESTDIR="$pkgdir" install
	make -C $THOST/32/lib$pkgname DESTDIR="$pkgdir" install
	rm -f "$pkgdir/usr"/lib{,32}/lib$pkgname_s.so*

	for lib in src include libsupc++; do
		make -C $THOST/libstdc++-v3/$lib DESTDIR="$pkgdir" install
		make -C $THOST/32/libstdc++-v3/$lib DESTDIR="$pkgdir" install
	done
	make -C $THOST/libstdc++-v3/python DESTDIR="$pkgdir" install

	make DESTDIR="$pkgdir" install-libcc1
	install -d "$pkgdir/usr/share/gdb/auto-load/usr/lib"
	mv "$pkgdir/usr/lib"/libstdc++.so.6.*-gdb.py "$pkgdir/usr/share/gdb/auto-load/usr/lib/"
	rm "$pkgdir/usr"/lib{,32}/libstdc++.so*

	make DESTDIR="$pkgdir" install-fixincludes
	make -C $pkgname DESTDIR="$pkgdir" install-mkheaders

	make -C lto-plugin DESTDIR="$pkgdir" install
	install -dm755 "$pkgdir/usr/lib/bfd-plugins/"
	ln -s /$libdir/liblto_plugin.so "$pkgdir/usr/lib/bfd-plugins/"

	#
	for lib in itm gomp sanitizer{,/{a,t,l}san}; do
		make -C $THOST/lib$lib DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
	done

	for lib in itm gomp sanitizer{,/asan}; do
		make -C $THOST/32/lib$lib DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
	done

	make -C $THOST/libquadmath DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS
	make -C $THOST/libgomp DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS

	make -C $THOST/libsanitizer DESTDIR="$pkgdir" install-nodist_sanincludeHEADERS
	make -C $THOST/32/libsanitizer DESTDIR="$pkgdir" install-nodist_sanincludeHEADERS

	make -C $pkgname DESTDIR="$pkgdir" install-man install-info

	rm "$pkgdir/usr/share/man/man1"/{g{ccgo,fortran,dc,m2},lto-dump}.1
	rm "$pkgdir/usr/share/info"/{g{ccgo,fortran,nat{-style,_rm,_ugn},dc},m2}.info

	make -C libcpp DESTDIR="$pkgdir" install
	make -C $pkgname DESTDIR="$pkgdir" install-po

	# many packages expect this symlink
	ln -s $pkgname "$pkgdir/usr/bin/cc"

	# create cc-rs compatible symlinks
	# https://github.com/rust-lang/cc-rs/blob/1.0.73/src/lib.rs#L2578-L2581
	for bin in {c,g}++ gcc{,-{ar,nm,ranlib}}; do
		ln -s /usr/bin/$bin "$pkgdir/usr/bin/x86_64-linux-gnu-$bin"
	done

	# POSIX conformance launcher scripts for c89 and c99
	install -Dm755 "$srcdir"/c{8,9}9 "$pkgdir/usr/bin/"

	# install the libstdc++ man pages
	make -C $THOST/libstdc++-v3/doc DESTDIR="$pkgdir" doc-install-man

	# remove files provided by lib32-gcc-libs
	rm -f "$pkgdir/usr/lib32"/lib{stdc++,${pkgname}_s}.so

	# byte-compile python libraries
	python3 -m compileall "$pkgdir/usr/share/$pkgname-$pkgver/"
	python3 -O -m compileall "$pkgdir/usr/share/$pkgname-$pkgver/"

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-fortran(){
	pkgdesc+=' - Fortran front-end'
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")
	provides=("$pkgname-multilib")
	replaces=("$pkgname-multilib")

	cd $pkgbase-build
	make -C $THOST/libgfortran DESTDIR="$pkgdir" \
		install-cafexeclibLTLIBRARIES \
		install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}

	make -C $THOST/32/libgfortran DESTDIR="$pkgdir" \
		install-cafexeclibLTLIBRARIES \
		install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}

	make -C $THOST/libgomp DESTDIR="$pkgdir" install-nodist_fincludeHEADERS
	make -C $pkgbase DESTDIR="$pkgdir" fortran.install-{common,man,info}
	install -Dm755 $pkgbase/f951 "$pkgdir/$libdir/f951"

	ln -s gfortran "$pkgdir/usr/bin/f95"

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-objc(){
	pkgdesc+=' - Objective-C front-end'
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")
	provides=("$pkgname-multilib")
	replaces=("$pkgname-multilib")

	cd $pkgbase-build
	make DESTDIR="$pkgdir" -C $THOST/libobjc install-headers
	install -dm755 "$pkgdir/$libdir"
	install -m755 $pkgbase/cc1obj{,plus} "$pkgdir/$libdir/"

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-ada(){
	pkgdesc+=' - Ada front-end (GNAT)'
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")
	provides=("$pkgname-multilib")
	replaces=("$pkgname-multilib")
	options=('!emptydirs' 'staticlibs')

	cd $pkgbase-build/$pkgbase
	make DESTDIR="$pkgdir" ada.install-{common,info}
	install -m755 gnat1 "$pkgdir/$libdir"

	cd "$srcdir/$pkgbase-build/$THOST/libada"
	make DESTDIR="$pkgdir" INSTALL="install" INSTALL_DATA="install -m644" install-libada

	cd "$srcdir/$pkgbase-build/$THOST/32/libada"
	make DESTDIR="$pkgdir" INSTALL="install" INSTALL_DATA="install -m644" install-libada

	ln -s $pkgbase "$pkgdir/usr/bin/gnatgcc"

	# insist on dynamic linking, but keep static libraries because gnatmake complains
	mv "$pkgdir/$libdir/adalib"/libgna{rl,t}-${pkgver%%.*}.so "$pkgdir/usr/lib"
	ln -s libgnarl-${pkgver%%.*}.so "$pkgdir/usr/lib/libgnarl.so"
	ln -s libgnat-${pkgver%%.*}.so "$pkgdir/usr/lib/libgnat.so"
	rm -f "$pkgdir/$libdir/adalib"/libgna{rl,t}.so
	install -d "$pkgdir/usr/lib32/"
	mv "$pkgdir/$libdir/32/adalib"/libgna{rl,t}-${pkgver%%.*}.so "$pkgdir/usr/lib32"
	ln -s libgnarl-${pkgver%%.*}.so "$pkgdir/usr/lib32/libgnarl.so"
	ln -s libgnat-${pkgver%%.*}.so "$pkgdir/usr/lib32/libgnat.so"
	rm -f "$pkgdir/$libdir/32/adalib"/libgna{rl,t}.so

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-go(){
	pkgdesc+=' - Go front-end'
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")
	provides=("go=1.17" "$pkgname-multilib")
	replaces=("$pkgname-multilib")
	conflicts=('go')

	cd $pkgbase-build
	make -C $THOST/libgo DESTDIR="$pkgdir" install-exec-am
	make -C $THOST/32/libgo DESTDIR="$pkgdir" install-exec-am
	make DESTDIR="$pkgdir" install-gotools
	make -C $pkgbase DESTDIR="$pkgdir" go.install-{common,man,info}

	rm -f "$pkgdir/usr"/lib{,32}/libgo.so*
	install -Dm755 $pkgbase/go1 "$pkgdir/$libdir/go1"

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_lib32-gcc-libs(){
	pkgdesc='32-bit runtime libraries shipped by GCC'
	depends=('lib32-glibc>=2.27')
	provides=(lib{go,gfortran,ubsan,libasan}.so)
	options=('!emptydirs' '!strip')

	cd $pkgbase-build
	make -C $THOST/32/lib$pkgbase DESTDIR="$pkgdir" install-shared
	rm -f "$pkgdir/$libdir/32/libgcc_eh.a"

	for lib in \
		atomic \
		gfortran \
		go \
		gomp \
		itm \
		quadmath \
		sanitizer/{a,l,ub}san \
		stdc++-v3/src \
		vtv
	do
		make -C $THOST/32/lib$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
	done

	make -C $THOST/32/libobjc DESTDIR="$pkgdir" install-libs
	make -C $THOST/libphobos DESTDIR="$pkgdir" install
	rm -f "$pkgdir/usr/lib32/libgphobos.spec"

	# remove files provided by gcc-libs
	rm -rf "$pkgdir/usr/lib"

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-d(){
	pkgdesc+=' - D frontend'
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")
	provides=('gdc')
	replaces=('gdc')
	options=('staticlibs')

	cd $pkgbase-build
	make -C $pkgbase DESTDIR="$pkgdir" d.install-{common,man,info}

	install -Dm755 gcc/gdc "$pkgdir/usr/bin/gdc"
	install -Dm755 gcc/d21 "$pkgdir/$libdir/d21"
	make -C $THOST/libphobos DESTDIR="$pkgdir" install
	rm -f "$pkgdir/usr/lib/"libg{phobos,druntime}.so*
	rm -f "$pkgdir/usr/lib32/"libg{phobos,druntime}.so*

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-m2(){
	pkgdesc+=' - Modula-2 frontend'
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")

	cd $pkgbase-build
	make -C $pkgbase DESTDIR="$pkgdir" m2.install-{common,man,info}

	install -Dm755 $pkgbase/cc1gm2 "$pkgdir/$libdir/cc1gm2"
	install -Dm755 $pkgbase/gm2 "$pkgdir/usr/bin/gm2"

	make -C $THOST/libgm2 DESTDIR="$pkgdir" install

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_gcc-rust(){
	pkgdesc+=" - Rust frontend"
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")

	cd $pkgbase-build
	make -C $pkgbase DESTDIR="$pkgdir" rust.install-{common,man,info}

	install -Dm755 $pkgbase/gccrs "$pkgdir/usr/bin/gccrs"
	install -Dm755 $pkgbase/crab1 "$pkgdir/usr/bin/crab1"

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_lto-dump(){
	pkgdesc="Dump link time optimization object files"
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")

	cd $pkgbase-build
	make -C $pkgbase DESTDIR="$pkgdir" lto.install-{common,man,info}

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}

package_libgccjit(){
	pkgdesc+=' - Just-In-Time Compilation backend'
	depends=("$pkgbase=$pkgver-$pkgrel" "libisl.so")

	cd $pkgbase-build
	make -C $pkgbase DESTDIR="$pkgdir" jit.install-common jit.install-info

	# Install Runtime Library Exception
	install -d "$pkgdir/usr/share/licenses/$pkgname/"
	ln -s /usr/share/licenses/$pkgbase-libs/RUNTIME.LIBRARY.EXCEPTION "$pkgdir/usr/share/licenses/$pkgname/"
}
